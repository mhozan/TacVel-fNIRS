function xtrctd=ExtractHeaderData(HeaderRaw)
%extracting values from the Neuralynx Header String
%mohsen hozan@mit.edu
% 02/11/2016 Feb 2016
% if ~isfield(HeaderRaw.Xtrode,'HeaderRaw')
%     disp('no Xtrode data has been imported. try running "loadXtrode" method first.')
%     return
% end
% assignin('base','HeaderRaw',HeaderRaw)
%Replacing tab delimitters with space. tab delimitter has been used occasionaly via
%neuralynx, .e.g. the header file of:
%\\mickey\MIT\Experimental Data\REM Study\PPT SU Study\M130307B PPT tg mDrive\130522 Baseline\2013-05-22_09-24-14\02. 10000000000 To 15000000000\TT1.ntt

% HeaderRaw = strrep(HeaderRaw,[char(9) char(9)],char(32)); %char(9) : tab ; char(32): space
% HeaderRaw = strrep(HeaderRaw,char(9),char(32)); %char(9) : tab
% HeaderRaw = strrep(HeaderRaw,char(10),' '); %char(10) : line feed (ctrl/alt+Enter)

% assignin('base','HeaderRaw2',HeaderRaw)

% if isempty(HeaderRaw.Xtrode.HeaderRaw)
%     disp('no Xtrode data has been imported. try running "loadXtrode" method first.')
%     return
% end
headertags = {...
    '## File Name'              ,false;... %2nd input: isnumeric?, i.e., whether should be converted to a number or be left as a string.
    '## Time Opened'            ,false;...
    '## Time Closed'            ,false;...
    ...
    '-FileType'                 ,false;...
    '-FileVersion'              ,false;...
    '-RecordSize'               ,true;...
    ...
    ' -CheetahRev'               ,false;...
    ...
    '-HardwareSubSystemName'  	,false;...
    '-HardwareSubSystemType' 	,false;...
    '-SamplingFrequency'    	,true;...
    '-ADMaxValue'               ,true;...
    '-ADBitVolts'               ,true;...
    ...
    '-AcqEntName'               ,false;...
    '-NumADChannels'            ,true;...
    '-ADChannel'                ,true;...
    '-InputRange'               ,true;...
    '-InputInverted'            ,false;...
    ...
    '-DSPLowCutFilterEnabled' 	,false;...
    '-DspLowCutFrequency'    	,true;...
    '-DspLowCutNumTaps'         ,true;...
    '-DspLowCutFilterType'    	,false;...
    ...
    '-DSPHighCutFilterEnabled'	,false;...
    '-DspHighCutFrequency'    	,true;...
    '-DspHighCutNumTaps'    	,true;...
    '-DspHighCutFilterType'   	,false;...
    '-DspDelayCompensation'   	,false;...
    '-DspFilterDelay_µs'      	,true;... 'µ' :char(181)
    ...
    '-WaveformLength'           ,true;...
    '-AlignmentPt'              ,true;...
    '-ThreshVal'                ,true;...
    '-MinRetriggerSamples'    	,true;...
    '-SpikeRetriggerTime'     	,true;...
    '-DualThresholding'         ,false;...
    ...
    '-Feature Peak'             ,false;...
    '-Feature Valley'           ,false;...
    '-Feature Energy'           ,false;...
    '-Feature Height'           ,false;...
    '-Feature NthSample'    	,false;...
    };


validfieldnames = matlab.lang.makeValidName(headertags(:,1),'ReplacementStyle','delete');
%%
%
%
% for n=1:HeaderRaw.Xtrode.N
for i=1:size(headertags,1)
%     disp(i)
    matchindices=find(~cellfun(@isempty,strfind(HeaderRaw,headertags{i,1})));
%     assignin('base','matchindices',matchindices)
    if ~isempty(matchindices)
        offset=2+length(headertags{i,1});
        if double(HeaderRaw{matchindices(1)}(1))==9 %sometimes the header lines start with a tab!(char(9)=horizontal tab)
            %example: %\\mickey\MIT\Experimental Data\REM Study\PPT SU Study\M130307B PPT tg mDrive\130522 Baseline\2013-05-22_09-24-14\02. 10000000000 To 15000000000\TT1.ntt
            HeaderRaw{matchindices(1)}(1)=''; %delete the first character or increase the offset
        end
        
        xtrctd.(validfieldnames{i})(1,:) = HeaderRaw{matchindices(1)}(offset:end);
        
        if length(matchindices)>1 %happens for stereotrodes and tetrodes
        for j=2:length(matchindices)
      	if double(HeaderRaw{matchindices(j)}(1))==9 %sometimes the header lines start with a tab!(char(9)=horizontal tab)
            HeaderRaw{matchindices(j)}(1)=''; %delete the first character or increase the offset
        end
        xtrctd.(validfieldnames{i})(j,:) = HeaderRaw{matchindices(j)}(offset:end);
%         xtrctd.(validfieldnames{i}) = [];
        end
%         xtrctd.(validfieldnames{i}) = array2table(xtrctd.(validfieldnames{i}));
        end
        
        if headertags{i,2}%is numeric? convert to double arrays
            xtrctd.(validfieldnames{i}) = str2double(strsplit((xtrctd.(validfieldnames{i}))));
        end
        
    end
end
% 
% obj.Fs_x(n)                     =   obj.Xtrode.HeaderData(n).SamplingFrequency ;
% 
% 
% if ~obj.Xtrode.data(n).double_istruemicrovolt
%     bitvoltconversion = obj.Xtrode.HeaderData(n).ADBitVolts;
%     if ~isnan(bitvoltconversion)
%         obj.Xtrode.data(n).double = 1e-6*bitvoltconversion*obj.Xtrode.data(n).double;
%         obj.Xtrode.data(n).double_istruemicrovolt = true;
%         fprintf([obj.ID, ': The unit of "Xtrode.data(%d).double" is now in microvolts.'],n)
%     else
%         obj.Xtrode.data(n).double_istruemicrovolt = false;
%         fprintf([obj.ID,': The unit of "Xtrode.data(%d).double" could not be converted to microvolts.\t "ADBitVolts" for Xtrode #%d is equal to %d.\n'],n,n,bitvoltconversion)
%     end
% end
